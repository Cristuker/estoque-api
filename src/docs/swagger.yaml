openapi: 3.0.0
info:
  description: 'This is a simple api to controle of estoque'
  version: '1.0.0'
  title: 'Estoque - API'
  termsOfService: ''
  contact:
    email: 'cristian123105@gmail.com'
  license:
    name: 'MIT License'
    url: 'https://github.com/Cristuker/estoque-api/blob/master/LICENSE'
host: 'localhost:3333'
basePath: '/'
tags:
  - name: 'Materials'
    description: 'Control your materials'
    externalDocs:
      description: 'Consult the permissions of the routes / roles so you can use'
      url: 'https://github.com/Cristuker/estoque-api'
  - name: 'Users'
    description: 'Create users to acess the api'
  - name: 'Login'
    description: 'Get token to authentitcate'
schemes:
  - 'http'
paths:
  /login:
    post:
      tags:
        - 'Login'
      summary: 'Get a authorization token'
      description: ''
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      requestBody:
        required: true
        description: User information # Markdown field
        content:
          application/json:
            schema:
              $ref: '#/definitions/Login'
      responses:
        '200':
          description: authorization token
        '400':
          description: 'Password dont match'
        '404':
          description: 'User not find'
        '406':
          description: 'The request body is not valid, check the params'
        '500':
          description: 'Internal server error'
  /users:
    post:
      tags:
        - 'Users'
      summary: 'Create users'
      produces:
        - 'application/json'
      requestBody:
        required: true
        description: User information # Markdown field
        content:
          application/json:
            schema:
              $ref: '#/definitions/User'
      responses:
        '201':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/UserCreated'
        '400':
          description: 'Invalid status value'
        '406':
          description: 'The request body is not valid, check the params'
        '409':
          description: 'The email is alredy used'
        '500':
          description: 'Internal server error'
  /rawMaterials:
    post:
      security:
        - bearerAuth: []
      tags:
        - 'Materials'
      summary: 'Create material'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      requestBody:
        required: true
        description: Material information
        content:
          application/json:
            schema:
              $ref: '#/definitions/Material'
      responses:
        '201':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/MaterialCreated'
        '400':
          description: 'Invalid status value'
        '406':
          description: 'The request body is not valid, check the params'
        '409':
          description: 'The email is alredy used'
        '500':
          description: 'Internal server error'
    get:
      security:
        - bearerAuth: []
      tags:
        - 'Materials'
      summary: 'Get materials'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: query
          name: name
          description: 'Name of the material you can filter'
          schema:
            type: 'string'
        - in: query
          name: user
          description: 'Name of user you can filter'
          schema:
            type: 'string'
      responses:
        '201':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/MaterialCreated'
        '400':
          description: 'Invalid status value'
        '401':
          description: 'This role do have permission for this action'
        '403':
          description: 'You dont can send user and name params in the same request'
        '404':
          description: 'User not found, check the query params'
        '500':
          description: 'Internal server error'
  /rawMaterials/{id}/request:
    put:
      security:
        - bearerAuth: []
      tags:
        - 'Materials'
      summary: 'Update a material'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: 'integer'
          description: Material id
      requestBody:
        required: true
        description: Update a material in database
        content:
          application/json:
            schema:
              $ref: '#/definitions/UpdateMaterial'
      responses:
        '202':
          description: 'Material updated whit success'
        '400':
          description: 'Invalid status value'
        '401':
          description: 'This role do have permission for this action'
        '404':
          description: 'User not found, check the query params'
        '406':
          description: 'The request body is not valid, check the paramst'
        '500':
          description: 'Internal server error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
definitions:
  Login:
    type: 'object'
    properties:
      email:
        type: 'string'
      password:
        type: 'string'
    required:
      - 'email'
      - 'password'
  User:
    type: 'object'
    properties:
      name:
        type: 'string'
      password:
        type: 'string'
      password_confirmation:
        type: 'string'
      email:
        type: 'string'
      role:
        type: 'string'
    required:
      - 'name'
      - 'email'
      - 'role'
      - 'password'
      - 'password_confirmation'
  UserCreated:
    type: 'object'
    properties:
      id:
        type: 'integer'
      name:
        type: 'string'
      role:
        type: 'string'
      email:
        type: 'string'
  Material:
    type: 'object'
    properties:
      name:
        type: 'string'
      quantity:
        type: 'integer'
        format: 'int64'
    required:
      - name
      - quantity
  MaterialCreated:
    type: 'object'
    properties:
      id:
        type: 'integer'
      name:
        type: 'string'
      quantity:
        type: 'integer'
      user_id:
        type: 'integer'
      updated_at:
        type: 'string'
        format: 'date-time'
      created_at:
        type: 'string'
        format: 'date-time'
  UpdateMaterial:
    type: 'object'
    properties:
      quantity:
        type: 'integer'
